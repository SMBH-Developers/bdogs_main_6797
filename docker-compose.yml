services:
  redis:
    build:
      context: .
      dockerfile: redis.dockerfile
    container_name: ${PROJECT_NAME}_redis
    restart: unless-stopped
    user: redis
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - redis_data:/data
      - ./src/config/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - bdocs_main_copy

  db:
    image: postgres:latest
    container_name: ${PROJECT_NAME}_db
    env_file:
      - .env
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST_AUTH_METHOD: trust
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data:rw
    networks:
      - bdocs_main_copy

  app:
    build:
      context: .
      dockerfile: app.dockerfile
    container_name: ${PROJECT_NAME}_app
    env_file:
      - .env
    restart: no
    volumes:
      - .:/app
    depends_on:
      - redis
    networks:
      - bdocs_main_copy

  auth:
    build:
      context: .
      dockerfile: app.dockerfile
    container_name: bdocs_auth
    env_file:
      - .env
    volumes:
      - .:/app
    command: "poetry run python get_dialogs.py"
    networks:
      - bdocs_main_copy

volumes:
  redis_data:
  postgres_data:

networks:
  bdocs_main_copy:
    external: true